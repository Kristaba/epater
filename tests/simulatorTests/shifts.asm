; Basic shifts
MOV R0, #8
ASSERT R0=8
MOV R1, R0, LSL #1
ASSERT R1=16
MOV R1, R0, LSL #30
ASSERT R1=0
MOV R1, R0, LSR #1
ASSERT R1=4
MOV R1, R0, LSR #20
ASSERT R1=0
MOV R1, R0, ASR #2
ASSERT R1=2
MOV R1, R0, ROR #3
ASSERT R1=1
MOV R1, R0, ROR #4
ASSERT R1=2147483648
MOV R1, R0, RRX
ASSERT R1=4
; Special cases (shift with 32)
MOV R1, R0, LSR #32
ASSERT R1=0
MOV R1, R0, ASR #32
ASSERT R1=0
; Shift from register
MOV R2, #1
MOV R1, R0, LSL R2
ASSERT R1=16
MOV R2, #0xA0000001
MOV R1, R0, LSL R2
ASSERT R1=16
; Shift with complement-2 negative numbers
MOV R0, #-64
MOV R1, R0, ASR #4
ASSERT R1=-4
MOV R1, R0, ROR #3
ASSERT R1=-8
MOV R1, R0, ASR #32
ASSERT R1=-1
; Carry flag actions
MOV R0, #7
MOVS R1, R0, LSR #1
ASSERT R1=3,C=1
MOVS R1, R0, LSL #1
ASSERT R1=14,C=0
MOVS R1, R0, LSL #30
ASSERT R1=3221225472,C=1
MOVS R1, R0, LSR #4
ASSERT R1=0,C=0
MOVS R1, R0, ASR #1
ASSERT R1=4,C=1
MOV R1, R0, RRX
ASSERT R1=2147483651
MOV R0, #6
MOVS R1, R0, RRX
ASSERT C=0,R1=2147483651
MOVS R1, R0, RRX
ASSERT C=0,R1=3
MOV R0, #0xFFFFFFFF
MOV R1, R0, LSR #32
ASSERT C=1,R1=0
